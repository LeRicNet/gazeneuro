// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mat4_create
NumericMatrix mat4_create();
RcppExport SEXP _gazeneuro_mat4_create() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(mat4_create());
    return rcpp_result_gen;
END_RCPP
}
// mat4_clone
NumericMatrix mat4_clone(NumericMatrix a);
RcppExport SEXP _gazeneuro_mat4_clone(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(mat4_clone(a));
    return rcpp_result_gen;
END_RCPP
}
// mat4_transpose
NumericMatrix mat4_transpose(NumericMatrix a);
RcppExport SEXP _gazeneuro_mat4_transpose(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(mat4_transpose(a));
    return rcpp_result_gen;
END_RCPP
}
// mat4_invert
NumericMatrix mat4_invert(NumericMatrix a);
RcppExport SEXP _gazeneuro_mat4_invert(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(mat4_invert(a));
    return rcpp_result_gen;
END_RCPP
}
// mat4_translate
NumericMatrix mat4_translate(NumericMatrix a, NumericVector v);
RcppExport SEXP _gazeneuro_mat4_translate(SEXP aSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(mat4_translate(a, v));
    return rcpp_result_gen;
END_RCPP
}
// mat4_scale_columns_directly
NumericMatrix mat4_scale_columns_directly(NumericMatrix mat, NumericVector dim);
RcppExport SEXP _gazeneuro_mat4_scale_columns_directly(SEXP matSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(mat4_scale_columns_directly(mat, dim));
    return rcpp_result_gen;
END_RCPP
}
// vec4_transformMat4
NumericVector vec4_transformMat4(NumericVector a, NumericMatrix m);
RcppExport SEXP _gazeneuro_vec4_transformMat4(SEXP aSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(vec4_transformMat4(a, m));
    return rcpp_result_gen;
END_RCPP
}
// print_glmatrix
void print_glmatrix(NumericMatrix mat);
RcppExport SEXP _gazeneuro_print_glmatrix(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    print_glmatrix(mat);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gazeneuro_mat4_create", (DL_FUNC) &_gazeneuro_mat4_create, 0},
    {"_gazeneuro_mat4_clone", (DL_FUNC) &_gazeneuro_mat4_clone, 1},
    {"_gazeneuro_mat4_transpose", (DL_FUNC) &_gazeneuro_mat4_transpose, 1},
    {"_gazeneuro_mat4_invert", (DL_FUNC) &_gazeneuro_mat4_invert, 1},
    {"_gazeneuro_mat4_translate", (DL_FUNC) &_gazeneuro_mat4_translate, 2},
    {"_gazeneuro_mat4_scale_columns_directly", (DL_FUNC) &_gazeneuro_mat4_scale_columns_directly, 2},
    {"_gazeneuro_vec4_transformMat4", (DL_FUNC) &_gazeneuro_vec4_transformMat4, 2},
    {"_gazeneuro_print_glmatrix", (DL_FUNC) &_gazeneuro_print_glmatrix, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_gazeneuro(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
